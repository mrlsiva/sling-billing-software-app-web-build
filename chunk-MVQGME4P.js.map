{
  "version": 3,
  "sources": ["src/app/components/settings-pages/staff/staff.component.ts", "src/app/components/settings-pages/staff/staff.component.html"],
  "sourcesContent": ["import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../../../services/auth.service';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { ToastService } from '../../../services/toast.service';\r\n\r\n@Component({\r\n    selector: 'app-settings-staff',\r\n    standalone: true,\r\n    imports: [CommonModule, HttpClientModule],\r\n    templateUrl: './staff.component.html',\r\n    styleUrls: ['./staff.component.scss', '../settings-common.scss']\r\n})\r\nexport class StaffComponent implements OnInit, OnDestroy {\r\n    items: any[] = [];\r\n    loading = false;\r\n    lastUpdated: Date | null = null;\r\n    private pollTimer: any = null;\r\n    pollingEnabled = true; // static toggle default: on\r\n    constructor(private http: HttpClient, private auth: AuthService, private router: Router, private toast: ToastService) { }\r\n    ngOnInit() { this.load(); }\r\n    ngAfterViewInit() {\r\n        // start polling every 10s if enabled\r\n        if (this.pollingEnabled) this.startPolling();\r\n    }\r\n    startPolling() {\r\n        this.stopPolling();\r\n        this.pollTimer = setInterval(() => this.load(false), 10000);\r\n    }\r\n    stopPolling() {\r\n        if (this.pollTimer) { clearInterval(this.pollTimer); this.pollTimer = null; }\r\n    }\r\n    togglePolling() {\r\n        this.pollingEnabled = !this.pollingEnabled;\r\n        if (this.pollingEnabled) this.startPolling(); else this.stopPolling();\r\n    }\r\n    goBack() { try { this.router.navigate(['/settings']); } catch { history.back(); } }\r\n    ngOnDestroy() {\r\n        this.stopPolling();\r\n    }\r\n\r\n    load(showLoading = true) {\r\n        if (showLoading) this.loading = true;\r\n        const url = `${environment.apiBase.replace(/\\/$/, '')}/staff`;\r\n        this.http.get<any>(url, { headers: this.auth.authHeaders() }).subscribe({ next: r => { this.items = r?.data ?? r; this.loading = false; this.lastUpdated = new Date(); }, error: (e) => { this.loading = false; this.toast.show('Failed to load Staff', 'error'); } });\r\n    }\r\n\r\n    /**\r\n     * Toggle active state locally for a staff item (UI-only). This does not call the API.\r\n     */\r\n    toggleItemActive(item: any) {\r\n        if (!item) return;\r\n        // flip between 1 and 0\r\n        item.is_active = item.is_active === 1 ? 0 : 1;\r\n        const state = item.is_active === 1 ? 'Active' : 'Inactive';\r\n        this.toast.show(`Set ${item.name || item.full_name || 'staff'} to ${state}`, 'info');\r\n    }\r\n}\r\n", "<div class=\"settings-page\">\r\n    <div class=\"d-flex space-between\">\r\n        <h3>Staff</h3>\r\n        <button class=\"settings-back p-0\" (click)=\"goBack()\"><i class=\"fa-solid fa-arrow-left\"></i> Back</button>\r\n    </div>\r\n    <div *ngIf=\"loading\">Loading...</div>\r\n    <div *ngIf=\"items?.length\" class=\"settings-grid\">\r\n        <article *ngFor=\"let it of items; let i = index\" class=\"settings-card\">\r\n            <header class=\"sc-header\">\r\n                <div class=\"sc-title\">{{ it.name || it.full_name || '-' }}</div>\r\n                <div class=\"sc-sno\">\r\n                    <span class=\"status-badge\" [class.active]=\"it.is_active === 1\"\r\n                        [class.inactive]=\"it.is_active !== 1\">\r\n                        {{ it.is_active === 1 ? 'Active' : 'Inactive' }}\r\n                    </span>\r\n                    <button class=\"btn btn-toggle card-toggle p-0\"\r\n                        (click)=\"$event.stopPropagation(); toggleItemActive(it)\"\r\n                        [attr.aria-pressed]=\"it.is_active === 1\" aria-label=\"Toggle active\">\r\n                        <i class=\"fa-solid\" [ngClass]=\"it.is_active === 1 ? 'fa-toggle-on' : 'fa-toggle-off'\"></i>\r\n                    </button>\r\n                </div>\r\n            </header>\r\n            <div class=\"sc-body\">\r\n                <div class=\"sc-row\" *ngIf=\"it.phone\"><strong>Phone:</strong> {{ it.phone }}</div>\r\n                <div class=\"sc-row\" *ngIf=\"it.role\"><strong>Role:</strong> {{ it.role }}</div>\r\n            </div>\r\n        </article>\r\n    </div>\r\n    <div *ngIf=\"!items?.length && !loading\">No items</div>\r\n</div>"],
  "mappings": "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",
  "names": []
}
