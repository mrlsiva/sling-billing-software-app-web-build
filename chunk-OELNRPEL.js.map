{
  "version": 3,
  "sources": ["src/app/components/settings-pages/gender/gender.component.ts", "src/app/components/settings-pages/gender/gender.component.html"],
  "sourcesContent": ["import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../../../services/auth.service';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { ToastService } from '../../../services/toast.service';\r\n\r\n@Component({\r\n    selector: 'app-settings-gender',\r\n    standalone: true,\r\n    imports: [CommonModule, HttpClientModule],\r\n    templateUrl: './gender.component.html',\r\n    styleUrls: ['./gender.component.scss', '../settings-common.scss']\r\n})\r\nexport class GenderComponent implements OnInit {\r\n    items: any[] = [];\r\n    loading = false;\r\n    constructor(private http: HttpClient, private auth: AuthService, private router: Router, private toast: ToastService) { }\r\n    ngOnInit() { this.load(); }\r\n    goBack() {\r\n        try { this.router.navigate(['/settings']); } catch { history.back(); }\r\n    }\r\n    load() {\r\n        this.loading = true;\r\n        const url = `${environment.apiBase.replace(/\\/$/, '')}/gender`;\r\n        this.http.get<any>(url, { headers: this.auth.authHeaders() }).subscribe({ next: r => { this.items = r?.data ?? r; this.loading = false; }, error: (e) => { this.loading = false; this.toast.show('Failed to load Gender', 'error'); } });\r\n    }\r\n\r\n    toggleItemActive(item: any) {\r\n        if (!item) return;\r\n        item.is_active = item.is_active === 1 ? 0 : 1;\r\n        this.toast.show(`${item.name || item.label || item.title || 'item'} set to ${item.is_active === 1 ? 'Active' : 'Inactive'}`, 'info');\r\n    }\r\n}\r\n\r\n", "<div class=\"settings-page\">\r\n    <div class=\"d-flex space-between\">\r\n        <h3>Gender</h3>\r\n        <button class=\"settings-back\" (click)=\"goBack()\"><i class=\"fa-solid fa-arrow-left\"></i> Back</button>\r\n    </div>\r\n    <div *ngIf=\"loading\">Loading...</div>\r\n    <div *ngIf=\"items?.length\" class=\"settings-grid\">\r\n        <article *ngFor=\"let it of items; let i = index\" class=\"settings-card\">\r\n            <header class=\"sc-header\">\r\n                <div class=\"sc-title\">{{ it.name || it.label || it.title || it }}</div>\r\n                <div class=\"sc-sno\">\r\n                    <span class=\"status-badge\" [class.active]=\"it.is_active === 1\"\r\n                        [class.inactive]=\"it.is_active !== 1\">\r\n                        {{ it.is_active === 1 ? 'Active' : 'Inactive' }}\r\n                    </span>\r\n                    <button class=\"card-toggle\" (click)=\"$event.stopPropagation(); toggleItemActive(it)\"\r\n                        [attr.aria-pressed]=\"it.is_active === 1\" aria-label=\"Toggle active\">\r\n                        <i class=\"fa-solid\" [ngClass]=\"it.is_active === 1 ? 'fa-toggle-on' : 'fa-toggle-off'\"></i>\r\n                    </button>\r\n                </div>\r\n            </header>\r\n            <div class=\"sc-body\">\r\n                <div class=\"sc-row\" *ngIf=\"it.description\">{{ it.description }}</div>\r\n            </div>\r\n        </article>\r\n    </div>\r\n    <div *ngIf=\"!items?.length && !loading\">No items</div>\r\n</div>"],
  "mappings": "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",
  "names": []
}
